{"version":3,"sources":["components/Main/Login.jsx","Nav.js","components/Main/Main.jsx","components/Admin/Table-List/admin-table-list-i.jsx","components/Admin/table-button.jsx","components/Admin/dialog-window.jsx","components/Admin/Table-List/admin-table-list.jsx","components/Admin/Table-Header/admin-table-header.jsx","components/Admin/Table-Header/admin-table-header-editing.jsx","components/Admin/admin-table.jsx","components/Admin/admin-main.jsx","App.js","index.js"],"names":["Login","props","loginUser","classes","useState","open","setOpen","userData","setUserData","handleClose","Button","color","classname","onClick","Dialog","onClose","aria-labelledby","DialogTitle","id","DialogContent","TextField","autoFocus","label","type","fullWidth","required","value","name","onChange","e","target","className","marginBottom","password","DialogActions","useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","Nav","isAuth","logout","AppBar","position","Container","Toolbar","Typography","component","Link","to","style","textDecoration","variant","Main","AdminTableListItem","data","map","i","TableCell","TableButton","handleClick","icon","disabled","colSpan","align","Tooltip","IconButton","aria-label","defaultProps","AlertDialog","React","acceptFunc","messageQuestion","description","DialogContentText","AdminTableList","deleteItem","pushItemToEdit","state","item","indx","Object","entries","TableRow","fontSize","AdminTableHeader","columnNames","createNewItem","console","log","length","columnName","AdminTableHeaderEditing","dataToChange","editItem","addItem","updateItem","cancelInput","labels","keys","Done","Clear","table","minWidth","AdminTable","subj","path","getItems","a","fetch","response","json","jsonData","setItems","error","message","method","body","headers","JSON","stringify","getColumnNames","res","req","column_name","replace","names","setColumnNames","items","setState","setDataToChange","useEffect","page","setPage","rowsPerPage","setRowsPerPage","emptyRows","Math","min","itemsPerPage","slice","TableContainer","Paper","Table","TableHead","key","filter","reduce","acc","TableBody","height","TableFooter","TablePagination","rowsPerPageOptions","count","SelectProps","inputProps","native","onChangePage","event","newPage","onChangeRowsPerPage","parseInt","TabPanel","children","index","other","role","hidden","Box","p","a11yProps","backgroundColor","palette","background","paper","display","tabs","borderRight","divider","AdminMain","setValue","mt","Tabs","orientation","newValue","Tab","App","setAuth","parseRes","localStorage","setItem","token","stayAuth","removeItem","exact","HomePage","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e4b49fed.chunk.js","sourcesContent":["import React, { useState} from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport {Dialog} from '@material-ui/core';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nconst Login = (props) => {\r\n\tconst {loginUser, classes} = props;\r\n\tconst [open, setOpen] = useState(false);\r\n\tconst [userData, setUserData] = useState({});\r\n\r\n\tconst acceptLogin = () => {\r\n\t\tloginUser(userData);\r\n\t\thandleClose();\r\n\t}\r\n\r\n\tconst handleClickOpen = () => {\r\n\t\tsetOpen(true);\r\n\t};\r\n\r\n\tconst handleClose = () => {\r\n\t\tsetOpen(false);\r\n\t\tsetUserData({});\r\n\t};\r\n\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Button color=\"inherit\" classname={classes} onClick={handleClickOpen}>\r\n\t\t\t\tLogin\r\n\t\t\t</Button>\r\n\t\t\t<Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n\t\t\t\t<DialogTitle id=\"form-dialog-title\">Login</DialogTitle>\r\n\t\t\t\t<DialogContent>\r\n\t\t\t\t\t<form>\r\n\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\tautoFocus\r\n\t\t\t\t\t\t\tid=\"name\"\r\n\t\t\t\t\t\t\tlabel=\"Name\"\r\n\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\trequired={true}\r\n\t\t\t\t\t\t\tvalue={userData.name}\r\n\t\t\t\t\t\t\tonChange={(e) => setUserData({...userData, 'name': e.target.value})}\r\n\t\t\t\t\t\t\tclassName={{marginBottom: '50px'}}/>\r\n\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\tautoFocus\r\n\t\t\t\t\t\t\tid=\"password\"\r\n\t\t\t\t\t\t\tlabel=\"Password\"\r\n\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\trequired={true}\r\n\t\t\t\t\t\t\tvalue={userData.password}\r\n\t\t\t\t\t\t\tonChange={(e) => setUserData({...userData, 'password': e.target.value})}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</form>\r\n\t\t\t\t</DialogContent>\r\n\t\t\t\t<DialogActions>\r\n\t\t\t\t\t<Button onClick={acceptLogin} color=\"primary\">\r\n\t\t\t\t\t\tAccept\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t<Button onClick={handleClose} color=\"primary\">\r\n\t\t\t\t\t\tCancel\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</DialogActions>\r\n\t\t\t</Dialog>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\n\r\nexport default Login;","import React from 'react';\r\nimport './App.css';\r\nimport {Link} from 'react-router-dom'\r\nimport {Container, AppBar, Toolbar, Typography, Button, makeStyles} from \"@material-ui/core\"\r\nimport Login from './components/Main/Login'\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\troot: {\r\n\t\tflexGrow: 1,\r\n\t},\r\n\tmenuButton: {\r\n\t\tmarginRight: theme.spacing(2),\r\n\t},\r\n\ttitle: {\r\n\t\tflexGrow: 1,\r\n\t},\r\n}));\r\n\r\nconst Nav = (props) => {\r\n\tconst classes = useStyles();\r\n\tconst {loginUser, isAuth, logout} = props;\r\n\r\n\treturn (\r\n\t\t<AppBar position=\"static\">\r\n\t\t\t<Container>\r\n\t\t\t\t<Toolbar>\r\n\t\t\t\t\t<Typography component={Link} to={\"/\"} style={{textDecoration: \"none\", color:\"white\"}} variant=\"h6\" className={classes.title}>\r\n\t\t\t\t\t\tClockware\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t\t{isAuth ? <Button color=\"inherit\" component={Link} to={\"/admin\"}className={classes.menuButton}>Admin</Button> : null}\r\n\t\t\t\t\t{isAuth ? <Button color=\"inherit\" onClick={logout} className={classes.menuButton}>Logout</Button> :\r\n\t\t\t\t\t\t<Login loginUser={loginUser} classes={classes.menuButton}/>}\r\n\t\t\t\t</Toolbar>\r\n\t\t\t</Container>\r\n\t\t</AppBar>\r\n\t)\r\n}\r\n\r\nexport default Nav;","import React from 'react'\r\nimport {Container} from '@material-ui/core'\r\nimport '../../App.css'\r\n\r\nconst Main = () => {\r\n\r\n\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t<h1>Main Page</h1>\r\n\t\t</Container>\r\n\t)\r\n}\r\n\r\nexport default Main;","import React, {Fragment} from 'react';\r\nimport {TableCell} from \"@material-ui/core\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst AdminTableListItem = (props) => {\r\n\tconst {data} = props;\r\n\r\n\treturn (\r\n\t\t<Fragment>\r\n\t\t\t{data.map(([key, value], i) => {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<TableCell key={i}>{value}</TableCell>\r\n\t\t\t\t)\r\n\t\t\t})}\r\n\r\n\t\t</Fragment>)\r\n}\r\n\r\nexport default AdminTableListItem;","import {IconButton, TableCell, Tooltip} from \"@material-ui/core\";\r\nimport React from \"react\";\r\n\r\nconst TableButton = (props) => {\r\n\tconst {handleClick, icon, title, disabled, colSpan} = props;\r\n\r\n\treturn (\r\n\t\t\t<TableCell component='th' align='right' colSpan={colSpan}>\r\n\t\t\t\t<Tooltip title={title} onClick={handleClick}>\r\n\t\t\t\t\t<IconButton aria-label={title} disabled={disabled}>\r\n\t\t\t\t\t\t{icon}\r\n\t\t\t\t\t</IconButton>\r\n\t\t\t\t</Tooltip>\r\n\t\t\t</TableCell>\r\n\t)\r\n}\r\nTableButton.defaultProps = {\r\n\tdisabled: false,\r\n\tcolSpan: 1\r\n}\r\n\r\nexport default TableButton;\r\n","import React, {Fragment} from  'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport {Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle} from '@material-ui/core';\r\nimport TableButton from './table-button'\r\n\r\nconst AlertDialog = (props) => {\r\n\tconst [open, setOpen] = React.useState(false);\r\n\tconst {icon, title, acceptFunc, messageQuestion, description, disabled} = props;\r\n\tconst handleClickOpen = () => {\r\n\t\tsetOpen(true);\r\n\t};\r\n\tconst handleClose = () => {\r\n\t\tsetOpen(false);\r\n\t};\r\n\tconst handleAccept = () => {\r\n\t\tacceptFunc();\r\n\t\tsetOpen(false);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Fragment>\r\n\t\t\t<TableButton icon={icon} handleClick={handleClickOpen} title={title} disabled={disabled}/>\r\n\t\t\t<Dialog\r\n\t\t\t\topen={open}\r\n\t\t\t\tonClose={handleClose}\r\n\t\t\t>\r\n\t\t\t\t<DialogTitle id=\"alert-dialog-title\">{messageQuestion}</DialogTitle>\r\n\t\t\t\t<DialogContent>\r\n\t\t\t\t\t<DialogContentText id=\"alert-dialog-description\">\r\n\t\t\t\t\t\t{description}\r\n\t\t\t\t\t</DialogContentText>\r\n\t\t\t\t</DialogContent>\r\n\t\t\t\t<DialogActions>\r\n\t\t\t\t\t<Button onClick={handleClose} color=\"primary\" autoFocus>\r\n\t\t\t\t\t\tDisagree\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t<Button onClick={handleAccept} color=\"primary\">\r\n\t\t\t\t\t\tAgree\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</DialogActions>\r\n\t\t\t</Dialog>\r\n\t\t</Fragment>\r\n\t);\r\n}\r\n\r\nAlertDialog.defaultProps = {\r\n\tmessageQuestion: 'Are you sure?',\r\n\tdescription: 'This will be permanently removed from the database.',\r\n}\r\n\r\nexport default AlertDialog","import React from \"react\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport AdminTableListItem from \"./admin-table-list-i\";\r\nimport PropTypes from \"prop-types\";\r\nimport {TableCell} from \"@material-ui/core\";\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport TableButton from \"../table-button\";\r\nimport AlertDialog from \"../dialog-window\";\r\n\r\nconst AdminTableList = (props) => {\r\n\tconst {data, deleteItem, pushItemToEdit, state} = props;\r\n\r\n\r\n\treturn (\r\n\t\tdata.map((item, indx) => {\r\n\t\t\tconst data = Object.entries(item);\r\n\t\t\tconst id = item.id;\r\n\r\n\t\t\treturn (\r\n\t\t\t\t<TableRow key={id} component='tr'>\r\n\t\t\t\t\t<TableCell component='td'>{indx + 1}</TableCell>\r\n\t\t\t\t\t<AdminTableListItem data={data}/>\r\n\t\t\t\t\t<TableButton handleClick={() => pushItemToEdit(item)} title='Edit' icon={<EditIcon fontSize=\"small\"/>}\r\n\t\t\t\t\t\t\t\t\t\t\t disabled={!!state}/>\r\n\t\t\t\t\t<AlertDialog acceptFunc={() => deleteItem(id)} title='Delete' icon={<DeleteIcon fontSize=\"small\"/>}\r\n\t\t\t\t\t\t\t\t\t\t\t disabled={!!state}/>\r\n\t\t\t\t</TableRow>\r\n\t\t\t)\r\n\t\t}))\r\n}\r\nAdminTableList.propTypes = {\r\n\tdata: PropTypes.array.isRequired,\r\n\tdeleteItem: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default AdminTableList\r\n","import {TableRow, TableCell} from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\r\nimport TableButton from \"../table-button\";\r\n\r\n\r\nconst AdminTableHeader = (props) => {\r\n\tconst {columnNames, createNewItem} = props;\r\n\tconsole.log(columnNames);\r\n\r\n\treturn (\r\n\t\t<TableRow component='tr'>\r\n\t\t\t<TableCell>{columnNames.length? '#' : null}</TableCell>\r\n\t\t\t{columnNames.map((columnName, i) => {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<TableCell key={i}>\r\n\t\t\t\t\t\t{columnName}\r\n\t\t\t\t\t</TableCell>\r\n\t\t\t\t)\r\n\t\t\t})}\r\n\t\t\t<TableButton handleClick={createNewItem} colSpan={2} title='Add New' icon={<AddCircleOutlineIcon/>}/>\r\n\t\t</TableRow>\r\n\t)\r\n}\r\nAdminTableHeader.propTypes = {\r\n\tcolumnNames: PropTypes.array.isRequired,\r\n\tcreateNewItem: PropTypes.func.isRequired\r\n};\r\n\r\nexport default AdminTableHeader","import {TableCell, TableRow, TextField} from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport TableButton from \"../table-button\";\r\nimport {Done, Clear} from '@material-ui/icons';\r\n\r\n\r\nconst AdminTableHeaderEditing = (props) => {\r\n\tconst {state, dataToChange, editItem, addItem, updateItem, cancelInput} = props\r\n\tconst labels = Object.keys(dataToChange);\r\n\r\n\treturn (\r\n\t\t<TableRow component='tr'>\r\n\t\t\t<TableCell/>\r\n\t\t\t{state==='isAdding' ? <TableCell/> : null}\r\n\t\t\t{labels.map((label, i) => {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<TableCell key={i}>\r\n\t\t\t\t\t\t<TextField type={label === \"email\" ? 'email' : 'text'}\r\n\t\t\t\t\t\t\t\t\t\t\t value={dataToChange[label] || ''}\r\n\t\t\t\t\t\t\t\t\t\t\t onChange={(e) => editItem(label, e.target.value)}\r\n\t\t\t\t\t\t\t\t\t\t\t label={label}\r\n\t\t\t\t\t\t\t\t\t\t\t required=\"true\"\r\n\t\t\t\t\t\t\t\t\t\t\t disabled={label === 'id'}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</TableCell>\r\n\t\t\t\t)\r\n\t\t\t})}\r\n\t\t\t<TableButton handleClick={state === 'isAdding' ? addItem : updateItem} title='Edit'\r\n\t\t\t\t\t\t\t\t\t icon={<Done fontSize=\"small\"/>}/>\r\n\t\t\t<TableButton handleClick={cancelInput} title='Cancel' icon={<Clear fontSize=\"small\"/>}/>\r\n\t\t</TableRow>\r\n\t)\r\n}\r\nAdminTableHeaderEditing.propTypes = {\r\n\tstate: PropTypes.string,\r\n\tdataToChange: PropTypes.object.isRequired,\r\n\teditItem: PropTypes.func.isRequired,\r\n\taddItem: PropTypes.func.isRequired,\r\n\tupdateItem: PropTypes.func.isRequired,\r\n\tcancelInput: PropTypes.func.isRequired,\r\n}\r\n\r\n\r\n\r\nexport default AdminTableHeaderEditing;","import React, {useEffect, useState, Fragment} from 'react';\r\nimport {\r\n\tmakeStyles,\r\n\tTable,\r\n\tTableBody,\r\n\tPaper,\r\n\tTableContainer,\r\n\tTableFooter,\r\n\tTableRow,\r\n\tTablePagination,\r\n\tTableCell, TableHead\r\n} from '@material-ui/core';\r\nimport AdminTableList from './Table-List/admin-table-list'\r\nimport AdminTableHeader from \"./Table-Header/admin-table-header\";\r\nimport AdminTableHeaderEditing from './Table-Header/admin-table-header-editing';\r\n\r\n\r\nconst useStyles = makeStyles({\r\n\ttable: {\r\n\t\tminWidth: 600,\r\n\t},\r\n});\r\n\r\nconst AdminTable = (props) => {\r\n\tconst {subj} = props;\r\n\tconst path = `/admin/${subj}`;\r\n\r\n\tconst getItems = async () => {\r\n\t\ttry {\r\n\t\t\tconst response = await fetch(path);\r\n\t\t\tconst jsonData = await response.json();\r\n\t\t\tsetItems(jsonData);\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error(err.message);\r\n\t\t}\r\n\t}\r\n\r\n\tconst deleteItem = async (id) => {\r\n\t\ttry {\r\n\t\t\tawait fetch(`${path}/${id}`, {\r\n\t\t\t\tmethod: \"DELETE\"\r\n\t\t\t});\r\n\t\t\tawait getItems();\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error(err)\r\n\t\t}\r\n\t}\r\n\r\n\tconst updateItem = async () => {\r\n\t\ttry {\r\n\t\t\tconst body = dataToChange;\r\n\t\t\tconst id = dataToChange.id;\r\n\t\t\tconst edit = await fetch(`${path}/${id}`, {\r\n\t\t\t\tmethod: \"PUT\",\r\n\t\t\t\theaders: {\"Content-Type\": \"application/json\"},\r\n\t\t\t\tbody: JSON.stringify(body)\r\n\t\t\t})\r\n\t\t\tawait getItems();\r\n\t\t\tcancelInput();\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error(err)\r\n\t\t}\r\n\t}\r\n\r\n\tconst addItem = async () => {\r\n\t\ttry {\r\n\t\t\tconst body = dataToChange;\r\n\t\t\tconst res = await fetch(`${path}`, {\r\n\t\t\t\tmethod: \"POST\",\r\n\t\t\t\theaders: {\"Content-Type\": \"application/json\"},\r\n\t\t\t\tbody: JSON.stringify(body)\r\n\t\t\t})\r\n\t\t\tawait getItems();\r\n\t\t\tcancelInput();\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error(err)\r\n\t\t}\r\n\t}\r\n\r\n\tconst getColumnNames = async () => {\r\n\t\ttry {\r\n\t\t\tconst res = await fetch(`${path}/columnNames`);\r\n\t\t\tconst req = await res.json();\r\n\t\t\tconst names = await req.map(({column_name}) => column_name.replace(/\\Bid|\\Bat$/i, ''));\r\n\t\t\tsetColumnNames(names);\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error(err.message)\r\n\t\t}\r\n\t};\r\n\r\n\r\n//State\r\n\tconst [items, setItems] = useState([]);\r\n\tconst [state, setState] = useState(null);\r\n\r\n//data to add new or edit item\r\n\tconst [dataToChange, setDataToChange] = useState({});\r\n\r\n//get column names for a table even if it's empty\r\n\tconst [columnNames, setColumnNames] = useState([])\r\n\r\n\r\n\tconst createNewItem = () => {\r\n\t\tconst columns = [...columnNames].filter(key => key !== 'id');\r\n\t\tconst data = columns.reduce((acc, key) => {\r\n\t\t\treturn {...acc, [key]: ''}\r\n\t\t}, {})\r\n\t\tsetDataToChange(data);\r\n\t\tsetState('isAdding')\r\n\t}\r\n\r\n\tconst editItem = (key, value) => {\r\n\t\tsetDataToChange({...dataToChange, [key]: value})\r\n\t}\r\n\tconst cancelInput = () => {\r\n\t\tsetState(null);\r\n\t\tsetDataToChange({});\r\n\t}\r\n\tconst pushItemToEdit = (data) => {\r\n\t\tsetDataToChange({...data});\r\n\t\tsetState('isEditing');\r\n\t}\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tgetItems();\r\n\t\tgetColumnNames();\r\n\t}, []);\r\n\r\n\r\n//Material UI const\r\n\tconst classes = useStyles();\r\n\tconst [page, setPage] = useState(0);\r\n\tconst [rowsPerPage, setRowsPerPage] = useState(5);\r\n\tconst emptyRows = rowsPerPage - Math.min(rowsPerPage, items.length - page * rowsPerPage);\r\n\tconst itemsPerPage = items.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage);\r\n\tconst changePage = (event, newPage) => setPage(newPage);\r\n\tconst changeRowsPerPage = (event) => {\r\n\t\tsetRowsPerPage(parseInt(event.target.value, 10));\r\n\t\tsetPage(0);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Fragment>\r\n\t\t\t<TableContainer component={Paper}>\r\n\t\t\t\t<Table className={classes.table} aria-label={`${subj} table`}>\r\n\t\t\t\t\t<TableHead>\r\n\t\t\t\t\t\t{state ?\r\n\t\t\t\t\t\t\t<AdminTableHeaderEditing cancelInput={cancelInput} dataToChange={dataToChange} state={state}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t updateItem={updateItem}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t editItem={editItem} addItem={addItem}/> :\r\n\t\t\t\t\t\t\t<AdminTableHeader columnNames={columnNames} createNewItem={createNewItem}/>}\r\n\t\t\t\t\t</TableHead>\r\n\t\t\t\t\t<TableBody>\r\n\t\t\t\t\t\t<AdminTableList data={itemsPerPage} deleteItem={deleteItem} pushItemToEdit={pushItemToEdit}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tstate={state}/>\r\n\t\t\t\t\t\t{emptyRows > 0 && (\r\n\t\t\t\t\t\t\t<TableRow style={{height: 53 * emptyRows}}>\r\n\t\t\t\t\t\t\t\t<TableCell component='td'/>\r\n\t\t\t\t\t\t\t</TableRow>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</TableBody>\r\n\t\t\t\t\t<TableFooter>\r\n\t\t\t\t\t\t<TableRow>\r\n\t\t\t\t\t\t\t<TablePagination\r\n\t\t\t\t\t\t\t\trowsPerPageOptions={[5, 10, 25, {label: 'All', value: -1}]}\r\n\t\t\t\t\t\t\t\tcount={items.length}\r\n\t\t\t\t\t\t\t\trowsPerPage={rowsPerPage}\r\n\t\t\t\t\t\t\t\tpage={page}\r\n\t\t\t\t\t\t\t\tSelectProps={{\r\n\t\t\t\t\t\t\t\t\tinputProps: {'aria-label': 'rows per page'},\r\n\t\t\t\t\t\t\t\t\tnative: true,\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tonChangePage={changePage}\r\n\t\t\t\t\t\t\t\tonChangeRowsPerPage={changeRowsPerPage}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</TableRow>\r\n\t\t\t\t\t</TableFooter>\r\n\t\t\t\t</Table>\r\n\t\t\t</TableContainer>\r\n\t\t</Fragment>\r\n\t);\r\n}\r\n\r\nexport default AdminTable;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {makeStyles, Tabs, Tab, Typography, Box, Container} from '@material-ui/core';\r\nimport AdminTable from \"./admin-table\";\r\n\r\n\r\n\r\nconst TabPanel = (props) => {\r\n\tconst {children, value, index, ...other} = props;\r\n\r\n\treturn (\r\n\t\t<div\r\n\t\t\trole=\"tabpanel\"\r\n\t\t\thidden={value !== index}\r\n\t\t\tid={`vertical-tabpanel-${index}`}\r\n\t\t\taria-labelledby={`vertical-tab-${index}`}\r\n\t\t\t{...other}\r\n\t\t>\r\n\t\t\t{value === index && (\r\n\t\t\t\t<Box p={3}>\r\n\t\t\t\t\t<Typography>{children}</Typography>\r\n\t\t\t\t</Box>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nTabPanel.propTypes = {\r\n\tchildren: PropTypes.node,\r\n\tindex: PropTypes.any.isRequired,\r\n\tvalue: PropTypes.any.isRequired,\r\n};\r\n\r\nconst a11yProps = (index) => {\r\n\treturn {\r\n\t\tid: `vertical-tab-${index}`,\r\n\t\t'aria-controls': `vertical-tabpanel-${index}`,\r\n\t};\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\troot: {\r\n\t\tflexGrow: 1,\r\n\t\tbackgroundColor: theme.palette.background.paper,\r\n\t\tdisplay: 'flex',\r\n\t\theight: 224,\r\n\t},\r\n\ttabs: {\r\n\t\tborderRight: `1px solid ${theme.palette.divider}`,\r\n\t},\r\n}));\r\n\r\nconst AdminMain = () => {\r\n\tconst classes = useStyles();\r\n\tconst [value, setValue] = React.useState(0);\r\n\r\n\tconst handleChange = (event, newValue) => {\r\n\t\tsetValue(newValue);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t<Box className={classes.root} mt={10}>\r\n\t\t\t\t<Tabs\r\n\t\t\t\t\torientation=\"vertical\"\r\n\t\t\t\t\tvalue={value}\r\n\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\taria-label=\"Vertical tabs example\"\r\n\t\t\t\t\tclassName={classes.tabs}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Tab label=\"Customers\" {...a11yProps(0)} />\r\n\t\t\t\t\t<Tab label=\"Masters\" {...a11yProps(1)} />\r\n\t\t\t\t\t<Tab label=\"Cities\" {...a11yProps(2)} />\r\n\t\t\t\t\t<Tab label=\"Services\" {...a11yProps(3)} />\r\n\t\t\t\t\t<Tab label=\"Orders\" {...a11yProps(4)} />\r\n\r\n\t\t\t\t</Tabs>\r\n\t\t\t\t<TabPanel value={value} index={0}>\r\n\t\t\t\t\t<AdminTable subj='customers'/>\r\n\t\t\t\t</TabPanel>\r\n\t\t\t\t<TabPanel value={value} index={1}>\r\n\t\t\t\t\t<AdminTable subj='masters'/>\r\n\t\t\t\t</TabPanel>\r\n\t\t\t\t<TabPanel value={value} index={2}>\r\n\t\t\t\t\t<AdminTable subj='cities'/>\r\n\t\t\t\t</TabPanel>\r\n\t\t\t\t<TabPanel value={value} index={3}>\r\n\t\t\t\t\t<AdminTable subj='services'/>\r\n\t\t\t\t</TabPanel>\r\n\t\t\t\t<TabPanel value={value} index={4}>\r\n\t\t\t\t\t<AdminTable subj='orders'/>\r\n\t\t\t\t</TabPanel>\r\n\t\t\t</Box>\r\n\t\t</Container>\r\n\t);\r\n}\r\n\r\nexport default AdminMain;","import React, {useState, useEffect} from \"react\";\nimport './App.css';\nimport Nav from \"./Nav\"\nimport HomePage from './components/Main/Main'\nimport {BrowserRouter as Router, Switch, Route, Redirect} from 'react-router-dom'\nimport AdminMain from \"./components/Admin/admin-main\";\n\n\nconst App = () => {\n\tconst [isAuth, setAuth] = useState(false);\n\n\n\tconst loginUser = async (data) => {\n\t\ttry {\n\t\t\tconst res = await fetch('/auth', {\n\t\t\t\tmethod: \"POST\",\n\t\t\t\theaders: {\"Content-Type\": \"application/json\"},\n\t\t\t\tbody: JSON.stringify(data),\n\t\t\t})\n\t\t\tconst parseRes = await res.json()\n\t\t\tlocalStorage.setItem(\"token\", parseRes.token)\n\t\t\tsetAuth(true);\n\n\t\t} catch (err) {\n\t\t\tconsole.error(err.message);\n\t\t}\n\t}\n\n\tconst stayAuth = async () => {\n\t\ttry {\n\t\t\tconst res = await fetch('/auth/verify', {\n\t\t\t\tmethod: \"GET\",\n\t\t\t\theaders: {token: localStorage.token}\n\t\t\t});\n\t\t\tconst parseRes = await res.json();\n\t\t\tparseRes === true ? setAuth(true) : setAuth(false);\n\t\t} catch (err) {\n\t\t\tconsole.error(err.message)\n\t\t}\n\t}\n\tconst logout = () => {\n\t\tlocalStorage.removeItem(\"token\");\n\t\tsetAuth(false);\n\t}\n\n\tuseEffect(() => {\n\t\tstayAuth()\n\t}, [])\n\n\n\treturn (\n\t\t<Router>\n\t\t\t<Nav loginUser={loginUser} isAuth={isAuth} logout={logout}/>\n\t\t\t<Switch>\n\t\t\t\t<Route path=\"/\" exact component={HomePage}/>\n\t\t\t\t{isAuth ? <Route path=\"/admin\" component={AdminMain}/> : <Redirect to=\"/\"/>}\n\t\t\t</Switch>\n\t\t</Router>\n\t);\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App/>\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n\n\n"],"sourceRoot":""}